import requests

#This script creates a Prisma user account. Follow the terminal instructions to create the account after you run the script.
#All you need is First name, Last name and email. Everything else is filled in and will create a READ ONLY Prisma user account.

print("Prisma createuser2.py has started.")
url = 'https://api2.prismacloud.io/login'

payload = {
    "password": "oHF2x26yvCU51ZlqCxsRdgy+sAY=",
    "username": "1d6d7625-809e-463f-a32f-5df7af444407"
}

#Use this website below to learn how to get your very own API key.
#https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin/manage-prisma-cloud-administrators/create-access-keys

headers = {"content-type": "application/json; charset=UTF-8"}

response = requests.request("POST", url, json=payload, headers=headers)

print(response.text)
print(f"response.text type = {type(response.text)}")
token = response.text

token2 = token[39:]
token = token2[:-132]
del token2

print(f"token = {token}")


def createUser2(paste, token):
    usercreated = 1
    defaultRoleID = "388b3c04-ae79-4e60-bdb4-054175a62edc"


    headers = {"content-type": "application/json",
        "x-redlock-auth": token}

    # url = "https://api2.prismacloud.io/v2/user/" + email
    url = "https://api2.prismacloud.io/v3/user"
    paste = str(paste)
    paste2 = paste.split()

    firstName = paste2[0]
    lastName = paste2[1]
    emailAddress = paste2[2]
    email = str(emailAddress)
    payload = {
    "accessKeyExpiration": 0,
    "accessKeyName": "string",
    "accessKeysAllowed": False,
    "defaultRoleId": "388b3c04-ae79-4e60-bdb4-054175a62edc",
    "email": emailAddress,
    "enableKeyExpiration": True,
    "firstName": firstName,
    "lastName": lastName,
    "roleIds": ["388b3c04-ae79-4e60-bdb4-054175a62edc"],
    "timeZone": "America/New_York",
    "type": "USER_ACCOUNT",
    "username": emailAddress
    }

    response = requests.request("POST", url, json=payload, headers=headers)
    print("Text Response from Prisma = ")
    print(response.text)
    if response.text == "":
        print("There was a response but its blank!")

    print(f"Response # = {response} for this account creation attempt.")
    print("Possible Response codes and what the values mean:")
    print("Response code numbers: 200 = succesful.")
    print("Response code numbers: 400 = Something went wrong in creating Prisma account probably invalid first/last name or email")
    print("Response code numbers: 409 = duplicate username, 500 = failed to add user profile.")

    return response

def createUser(token):
    firstName = input("What is the user's First Name\n?")
    print(f"First name = {firstName}")
    lastName = input("What is the user's Last Name?\n")
    print(f"Last name = {lastName}")
    emailAddress = input("What is the user's Email Address?\n")
    print(f"Email address = {emailAddress}")

    prisma_username = firstName + " " + lastName
    print(f"prisma_username = {prisma_username}")
    url = "https://api2.prismacloud.io/v3/user"

    email = str(emailAddress)
#    url = "https://api2.prismacloud.io/v2/user/" + email
    print(f"url = {url}")

    usercreated = 1
    defaultRoleID = "388b3c04-ae79-4e60-bdb4-054175a62edc"

    headers = {"content-type": "application/json",
        "x-redlock-auth": token}


    payload = {"accessKeyExpiration": 0, "accessKeyName": "string", "accessKeysAllowed": False, "defaultRoleId": "388b3c04-ae79-4e60-bdb4-054175a62edc",
               "email": emailAddress, "enableKeyExpiration": True, "firstName": firstName, "lastName": lastName, "roleIds": ["388b3c04-ae79-4e60-bdb4-054175a62edc"],
               "timeZone": "America/New_York", "type": "USER_ACCOUNT", "username": emailAddress }

    response = requests.request("POST", url, json=payload, headers=headers)
    print("Text Response from Prisma = ")
    print(response.text)
    if response.text == "":
        print("There was a response but its blank!")

    print(f"Response # = {response} for this account creation attempt.")
    print("Possible Response codes and what the values mean:")
    print("Response code numbers: 200 = succesful.")
    print("Response code numbers: 400 = Something went wrong in creating Prisma account probably invalid first/last name or email")
    print("Response code numbers: 409 = duplicate username, 500 = failed to add user profile.")

    response2 = str(response)

    if response2 == "<Response [200]>":
        print(f"This Prisma user {email} exists, You created the Prisma account succesfully, this program verifed this.")
    if response2 == "<Response [400]>":
        print(f" {email} Prisma user does not exist, this program verifed this.")
    if response2 == "<Response [500]>":
        print("This program failed to get the user profile data so nothing was verifed")


    return response

def ask_to_create_user(token):
    answer = input(
        "Are you ready to create this Prisma account, look at the information above and type Yes if correct, or type Format to paste with approved Format.")

    if answer == "Y":
        usercreated = createUser(token)
        usercreated = 1
        # print_Response(response)

    if answer == "y":
        usercreated = createUser(token)
        usercreated = 1
        # print_Response(response)

    if answer == "Yes":
        usercreated = createUser(token)
        usercreated = 1
        # print_Response(response)

    if answer == "YES":
        usercreated = createUser(token)
        usercreated = 1
        # print_Response(response)

    if answer == "yes":
        usercreated = createUser(token)
        usercreated = 1
        # print_Response(response)

    if answer == "yES":
        usercreated = createUser(token)
        usercreated = 1
        # print_Response(response)

    if answer == "Format":
        paste = input("Paste in or type the approved Format [First Name, Last Name, Email Address. No commas and don't end with a period.\n")
        usercreated = createUser2(paste, token)

    if answer == "format":
        paste = input("Paste in or type the approved Format [First Name, Last Name, Email Address. No commas and don't end with a period.\n")
        usercreated = createUser2(paste, token)

    if answer == "FORMAT":
        paste = input("Paste in or type the approved Format [First Name, Last Name, Email Address. No commas and don't end with a period.\n")
        usercreated = createUser2(paste, token)
        usercreated = 1

    if answer == "fORMAT":
        paste = input("Paste in or type the approved Format [First Name, Last Name, Email Address. No commas and don't end with a period.\n")
        usercreated = createUser2(paste, token)
        usercreated = 1

usercreated = 0


while usercreated <= 2:
    if usercreated == 0:
        repeat = input("Do you have a user you would like to create?")
        if repeat == "Yes":
            ask_to_create_user(token)
            usercreated = 1
        if repeat == "YES":
            ask_to_create_user(token)
            usercreated = 1
        if repeat == "yes":
            ask_to_create_user(token)
            usercreated = 1
        if repeat == "yES":
            ask_to_create_user(token)
            usercreated = 1
        if repeat == "No":
            usercreated = 3
        if repeat == "NO":
            usercreated = 3
        if repeat == "no":
            usercreated = 3
        if repeat == "nO":
            usercreated = 3

    if usercreated == 1:
        repeat = input("Do you have another a user you would like to create?")
        if repeat == "Yes":
            ask_to_create_user(token)
        if repeat == "YES":
            ask_to_create_user(token)
        if repeat == "yes":
            ask_to_create_user(token)
        if repeat == "yES":
            ask_to_create_user(token)
        if repeat == "No":
            usercreated = 3
        if repeat == "NO":
            usercreated = 3
        if repeat == "no":
            usercreated = 3
        if repeat == "nO":
            usercreated = 3


print("The program has ended")
